print("FIRST COME FIRST SERVE SCHEDULING")
n = int(input("Enter number of processes: "))
d = dict()
# Input the arrival and burst times for each process
for i in range(n):
    key = "P" + str(i + 1)
    a = int(input(f"Enter arrival time of process {i + 1}: "))
    b = int(input(f"Enter burst time of process {i + 1}: "))
    d[key] = [a, b]  # [arrival time, burst time]
# Sort processes by arrival time
d = sorted(d.items(), key=lambda item: item[1][0])
# Calculate exit time, turnaround time, and waiting time
ET = []
for i in range(len(d)):
    if i == 0:
        ET.append(d[i][1][1])  # Exit time for the first process
    else:
        ET.append(ET[i - 1] + d[i][1][1])  # Add burst time to previous exit time
TAT = [ET[i] - d[i][1][0] for i in range(len(d))]  # Turnaround time = Exit time - Arrival time
WT = [TAT[i] - d[i][1][1] for i in range(len(d))]  # Waiting time = Turnaround time - Burst time
# Calculate average waiting time and turnaround time
avg_WT = sum(WT) / n
avg_TAT = sum(TAT) / n
# Print the results in tabular form
print("\nProcess | Arrival | Burst | Exit | Turn Around | Wait |")
for i in range(n):
    print(f"   {d[i][0]}   |   {d[i][1][0]}   |    {d[i][1][1]}   |   {ET[i]}   |   {TAT[i]}   |   {WT[i]}   |")
print("\nAverage Waiting Time:", avg_WT)
print("Average Turnaround Time:", avg_TAT)
# Gantt Chart
print("\nGantt Chart:")
gantt_chart = ""
for i in range(n):
    gantt_chart += "| " + d[i][0] + " "
gantt_chart += "|"
print(gantt_chart)
# Time line
timeline = "0"
for i in range(n):
    timeline += "     " + str(ET[i])  # Add each process exit time to the timeline
print(timeline)